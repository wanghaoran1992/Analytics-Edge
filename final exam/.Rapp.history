getwd()
load(url("http://bit.ly/dasi_gss_data"))
names(GSS)
names(dasi_gss_data)
names(gss)
str(income06)
str(gss$income06)
summary(gss$income06)
summary(gss$degreee)
summary(gss$degree)
hist(gss$income06)
hist(10,gss$income06)
barplot(gss$income06)
?barplot
?dim
dim(gss)
barplot(table(gss$income06))
?barplot
barplot(table(gss$income06),xlab="income")
plot(gss$income06,gss$degree)
plot(gss$income06,gss$degree,type="l")
plot(gss$degree,gss$income06,type="l")
gss$income06
summary(gss$income06)
barplot(table(gss$income06))
barplot(table(gss$degree))
summary(gss$degree)
?subset
gss
c(gss$income06,gss$degree)
table(gss$degree,gss$income06)
dataset=cbind(gss$degree,gss$income06)
dataset
tail(dataset)
tail(dataset,30)
pf(21,3,791,lower.tail=FALSE)
4.259048e-13
sqrt(3.4**2/18+2.7**2/18)
pt(0.5,df=17,lower.tail=FALSE)
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
sqrt(0.4/0.07)
sqrt(0.2/0.07)
sqrt(0.2/0.4)
(0.2/0.075)^2
(0.2/0.075)
sqrt(13)
install.packages("KernSmooth")
library(KernSmooth)
load("/Users/haoranwang/Desktop/网络课程笔记/Data Science Track/R programming/Programming exercises-swirl/Untitled.RData")
myData
int(2)
numeric(2)
i=6
numeric(i)
class(i)
? ave
ave(1:3)
ave(1;4)
ave(1:4)
colors()
dev.cur()
dev.set(2)
dev.cur()
dev.off()
617*150+238*16
elantra=read.csv("elantra.csv")
nrow(elantra)
names(elantra)
class(elantra$Year)
training=subset(elantra,Year<=2012)
test=subset(elantra,Year>2012)
nrow(training)
lmmodel=lm(ElantraSales~Unemployment+Queries+CPI_energy+CPI_all,data=elentra)
lmmodel=lm(ElantraSales~Unemployment+Queries+CPI_energy+CPI_all,data=elantra)
summary(lmmodel)
lmmodel=lm(ElantraSales~Unemployment+Queries+CPI_energy+CPI_all,data=training)
summary(lmmodel)
lmmodel2=lm(ElantraSales~Unemployment+Queries+CPI_energy+CPI_all+Month,data=training)
summary(lmmodel2)
head(training$Month)
110.69*4
training$Month2=as.factor(training$Month)
lmmodel3=lm(ElantraSales~Unemployment+Queries+CPI_energy+CPI_all+Month2,data=training)
summary(lmmodel3)
cor(training)
cor(lmmodel3)
cor(training)
training$Month2=as.numeric(as.character(training$Month2))
cor(training)
training$Month2=as.factor(training$Month2)
model=lm(ElantraSales~Month2+Year+Unemployment+Queries+CPI_energy+CPI_all,data=training)
summary(model)
model2=lm(ElantraSales~Month2+Year+Unemployment+CPI_energy+CPI_all,data=training)
summary(model2)
model3=lm(ElantraSales~Month2+Unemployment+CPI_energy+CPI_all,data=training)
summary(model3)
test$Month2=as.factor(test$Month)
predict=predict(model3,newdata=test)
head(predict)
SSE=(predict-test$ElantraSales)^2
SSE
SSE=(sum(predict-test$ElantraSales))^2
SSE
SSE=sum((predict-test$ElantraSales)^2)
SSE
mean(training$ElantraSales)
SST=sum((test$ElantraSales-mean(training$ElantraSales))^2)
1-SSE/SST
sort(predict-test$ElantraSales)
elantra[14]
elantra(14)
elantra[14,]
times=read.csv("nytimes.csv")
head(times)
names(times)
table(times$popular)
105/(105+868)
cor(times)
str(times)
count.char("ab")
count.character("ab")
count.cha("ab")
character.count("ab")
nchar("aa")
headline=as.character(times$headline)
headline2=nchar(headline)
cor(headline2~times$popular)
cor(headline2,times$popular)
a=c(1,2)
b=c(3,4)
cor(a,b)
lrm=glm(popular~print+type+word.count,data=times,family=binomial)
summary(lrm)
lrm=glm(popular~print+type+word.count,data=times,family='binomial')
summary(lrm)
set.seed(144)
library(caTools)
set.seed(144)
spl = sample.split(times$popular,SplitRatio=0.7)
train=subset(times,split==TRUE)
train=subset(times,spl==TRUE)
test=subset(times,spl==FALSE)
lrm=glm(popular~print+type+word.count,data=train,family='binomial')
summary(lrm)
pred=predict(lrm,newdata=test)
head(pred)
pred=predict(lrm,newdata=test,type="response")
head(pred)
?predict
test[which(test$word.count==682)]
sub=which(test$word.count==682)
head(sub)
test[test$word.count==682]
test$word.count==682
times$word.count==682
times[times$word.count==682]
summary(lrm)
-2.5075573-0.8468333*1+0.9055929*1+682*0.0002600
? predict
exp(-2.271478)
1/(1+exp(2.271478))
