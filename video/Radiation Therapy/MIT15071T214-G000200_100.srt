0
00:00:00,000 --> 00:00:00,500


1
00:00:00,500 --> 00:00:05,350
In this video, we'll solve our simple example in LibreOffice.

2
00:00:05,350 --> 00:00:07,310
Go ahead and open the spreadsheet,

3
00:00:07,310 --> 00:00:08,101
IMRT_SimpleExample.

4
00:00:08,101 --> 00:00:10,730


5
00:00:10,730 --> 00:00:14,400
At the top of the spreadsheet, you should see our data.

6
00:00:14,400 --> 00:00:17,560
For each beamlet and each voxel, we

7
00:00:17,560 --> 00:00:20,200
have the dose that that beamlet gives

8
00:00:20,200 --> 00:00:23,560
to that voxel at unit intensity.

9
00:00:23,560 --> 00:00:28,860
So we have this data for voxel one, voxel two, voxel three,

10
00:00:28,860 --> 00:00:31,750
all the way up to voxel nine.

11
00:00:31,750 --> 00:00:35,650
Each row corresponds to one of the six beamlets.

12
00:00:35,650 --> 00:00:37,810
This is the data that we saw on the slides

13
00:00:37,810 --> 00:00:40,200
in the previous video.

14
00:00:40,200 --> 00:00:43,660
Below the data, we've outlined our decision variables,

15
00:00:43,660 --> 00:00:46,530
which are the intensities of the beamlets.

16
00:00:46,530 --> 00:00:51,560
So for beamlets one through six, we have one decision variable.

17
00:00:51,560 --> 00:00:55,700
These six decision variables are outlined in yellow.

18
00:00:55,700 --> 00:00:57,770
Right now, the decision variable cells

19
00:00:57,770 --> 00:01:02,870
are blank, because the values will be filled in by Solver.

20
00:01:02,870 --> 00:01:06,440
Below the decision variables, we have our objective.

21
00:01:06,440 --> 00:01:11,165
Our objective is to minimize the total dose to healthy tissue.

22
00:01:11,165 --> 00:01:16,750
The healthy-tissue voxels are voxels one, three, five, six,

23
00:01:16,750 --> 00:01:18,200
and nine.

24
00:01:18,200 --> 00:01:21,320
So let's go ahead and build our objective in the blue cell

25
00:01:21,320 --> 00:01:23,070
here.

26
00:01:23,070 --> 00:01:26,150
So first, we want to add up the total dose

27
00:01:26,150 --> 00:01:30,310
that each beamlet gives to voxel one.

28
00:01:30,310 --> 00:01:32,690
So here we'll use the function that we

29
00:01:32,690 --> 00:01:36,060
used in the previous lecture, sumproduct.

30
00:01:36,060 --> 00:01:40,840
So type an equals sign, and then sumproduct,

31
00:01:40,840 --> 00:01:46,400
and select all of the decision variables, semicolon, and then

32
00:01:46,400 --> 00:01:48,420
all of the doses.

33
00:01:48,420 --> 00:01:51,440
This will add up the total dose that beamlet one gives

34
00:01:51,440 --> 00:01:54,400
to voxel one, plus the total dose beamlet two

35
00:01:54,400 --> 00:01:56,910
gives to voxel one, plus the total dose

36
00:01:56,910 --> 00:02:00,700
beamlet three gives to voxel one, etc.

37
00:02:00,700 --> 00:02:04,210
Now we want to repeat this for voxels three, five, six,

38
00:02:04,210 --> 00:02:07,460
and nine-- the other healthy-tissue voxels.

39
00:02:07,460 --> 00:02:09,830
So go ahead and type a plus sign,

40
00:02:09,830 --> 00:02:14,540
and then sumproduct, again, the six decision variables,

41
00:02:14,540 --> 00:02:20,380
semicolon, and this time, select the dose data for voxel three.

42
00:02:20,380 --> 00:02:24,240
Now let's repeat this again, but this time for voxel five.

43
00:02:24,240 --> 00:02:26,620
So sumproduct, and then the decision

44
00:02:26,620 --> 00:02:31,050
variables, and the dose data for voxel five.

45
00:02:31,050 --> 00:02:36,410
Now for voxel six, sumproduct, the decision variables,

46
00:02:36,410 --> 00:02:41,170
semicolon, and the dose data for voxel six.

47
00:02:41,170 --> 00:02:45,650
And lastly, we're going to add the sumproduct of the decision

48
00:02:45,650 --> 00:02:51,900
variables, semicolon, and then scroll over to voxel nine,

49
00:02:51,900 --> 00:02:54,620
and select the dose data for voxel nine.

50
00:02:54,620 --> 00:02:57,480
Close the parentheses, and hit Enter.

51
00:02:57,480 --> 00:03:00,390
You should see that the objective has a 0 right now,

52
00:03:00,390 --> 00:03:02,690
because none of our decision-variable values

53
00:03:02,690 --> 00:03:03,960
are filled in.

54
00:03:03,960 --> 00:03:06,420
When Solver fills in our decision variables,

55
00:03:06,420 --> 00:03:10,040
our objective value will be here.

56
00:03:10,040 --> 00:03:13,370
Below the objective is our constraints.

57
00:03:13,370 --> 00:03:16,520
The first four constraints make sure that each voxel

58
00:03:16,520 --> 00:03:20,290
of the tumor is getting a dose of at least 7.

59
00:03:20,290 --> 00:03:23,350
The last constraint makes sure that the spinal cord

60
00:03:23,350 --> 00:03:26,760
receives a dose of no more than 5.

61
00:03:26,760 --> 00:03:29,870
Let's go ahead and construct our constraints.

62
00:03:29,870 --> 00:03:32,820
For the first four constraints, the left-hand side

63
00:03:32,820 --> 00:03:36,100
is going to be the total dose that that voxel of the tumor

64
00:03:36,100 --> 00:03:37,190
gets.

65
00:03:37,190 --> 00:03:40,100
So for voxel two, we have the left-hand side

66
00:03:40,100 --> 00:03:44,340
is equal to the sumproduct of the decision

67
00:03:44,340 --> 00:03:51,210
variables, semicolon, and then the data for voxel two.

68
00:03:51,210 --> 00:03:53,610
Close the parentheses, and hit Enter.

69
00:03:53,610 --> 00:03:55,880
We want to make sure that this value is

70
00:03:55,880 --> 00:03:59,230
greater than or equal to 7.

71
00:03:59,230 --> 00:04:01,430
Now let's repeat this for voxel four.

72
00:04:01,430 --> 00:04:06,060
So equals sumproduct, and then, in parentheses,

73
00:04:06,060 --> 00:04:09,840
select the decision variables, semicolon,

74
00:04:09,840 --> 00:04:12,150
and the data for voxel four.

75
00:04:12,150 --> 00:04:18,269
Again, we also want this one to be greater than or equal to 7.

76
00:04:18,269 --> 00:04:20,570
Now let's repeat this for voxel seven.

77
00:04:20,570 --> 00:04:27,140
So sumproduct of the decision variables, semicolon, and then

78
00:04:27,140 --> 00:04:36,670
the data for voxel seven, again, greater than or equal to 7.

79
00:04:36,670 --> 00:04:41,250
And lastly, for voxel eight, we want the sumproduct

80
00:04:41,250 --> 00:04:45,590
of the decision variables, and the data for voxel eight

81
00:04:45,590 --> 00:04:54,350
this time to also be greater than or equal to 7.

82
00:04:54,350 --> 00:04:56,540
And our last constraint, we want to make sure

83
00:04:56,540 --> 00:04:59,350
that the total dose to voxel five,

84
00:04:59,350 --> 00:05:02,170
the spinal cord voxel-- so sumproduct

85
00:05:02,170 --> 00:05:08,435
of the decision variables, and then the data for voxel five,

86
00:05:08,435 --> 00:05:13,270
is less than or equal to 5.

87
00:05:13,270 --> 00:05:14,790
The remaining constraints we have

88
00:05:14,790 --> 00:05:16,570
are the non-negativity constraints,

89
00:05:16,570 --> 00:05:19,660
which we'll add in directly in the Solver.

90
00:05:19,660 --> 00:05:25,250
So now go ahead and go to the Tools menu, and select Solver.

91
00:05:25,250 --> 00:05:27,770
The Solver window should pop up.

92
00:05:27,770 --> 00:05:30,870
First we need to tell Solver what our objective is.

93
00:05:30,870 --> 00:05:33,690
So go ahead and delete what's in "Target cell",

94
00:05:33,690 --> 00:05:36,700
and making sure that your cursor is in "Target cell",

95
00:05:36,700 --> 00:05:39,680
select the blue objective cell.

96
00:05:39,680 --> 00:05:42,830
Now, we want to change "Maximum" to "Minimum", because we're

97
00:05:42,830 --> 00:05:47,080
trying to minimize the total dose to healthy tissue,

98
00:05:47,080 --> 00:05:52,360
and our decision variables should be the six yellow cells.

99
00:05:52,360 --> 00:05:54,300
Now let's add in our constraints.

100
00:05:54,300 --> 00:05:56,680
So in the first "Cell reference" box,

101
00:05:56,680 --> 00:05:58,920
let's select the first four constraints.

102
00:05:58,920 --> 00:06:01,350
Because they're all greater than or equal to constraints,

103
00:06:01,350 --> 00:06:03,710
we can add them in together.

104
00:06:03,710 --> 00:06:07,380
And change the "Operator" to greater than or equal to,

105
00:06:07,380 --> 00:06:12,400
and then in "Value", select the four right-hand sides.

106
00:06:12,400 --> 00:06:14,700
Now let's add in the spinal-cord constraint.

107
00:06:14,700 --> 00:06:16,850
So in the next "Cell reference" box,

108
00:06:16,850 --> 00:06:19,360
select the spinal cord left-hand side,

109
00:06:19,360 --> 00:06:21,030
make sure that "Operator" is less than

110
00:06:21,030 --> 00:06:23,910
or equal to, and in the second "Value" box,

111
00:06:23,910 --> 00:06:27,430
select the spinal cord, right-hand side.

112
00:06:27,430 --> 00:06:29,720
Now let's add our non-negativity constraints.

113
00:06:29,720 --> 00:06:33,230
So in the "Cell reference", just directly pick the six decision

114
00:06:33,230 --> 00:06:41,530
variables, and make sure the "Operator"

115
00:06:41,530 --> 00:06:47,330
is greater than or equal to, and the "Value" should just be 0.

116
00:06:47,330 --> 00:06:49,060
Now, in the Options, make sure you've

117
00:06:49,060 --> 00:06:54,370
selected the Linear Solver, and click OK.

118
00:06:54,370 --> 00:06:57,710
Now go ahead and hit Solve.

119
00:06:57,710 --> 00:06:59,480
You should see a solving result that

120
00:06:59,480 --> 00:07:01,750
says: "Solving successfully finished.

121
00:07:01,750 --> 00:07:04,490
Result: 22.75".

122
00:07:04,490 --> 00:07:07,750
That's the optimal objective function value.

123
00:07:07,750 --> 00:07:10,770
Go ahead and select Keep Result.

124
00:07:10,770 --> 00:07:13,240
Now let's take a look at our solution.

125
00:07:13,240 --> 00:07:15,350
So the optimal solution is to have

126
00:07:15,350 --> 00:07:19,070
beamlet one at an intensity 2.25,

127
00:07:19,070 --> 00:07:22,180
beamlet two at an intensity of 0,

128
00:07:22,180 --> 00:07:24,980
beamlet three at an intensity of 3,

129
00:07:24,980 --> 00:07:28,420
beamlet four at an intensity of 3.5,

130
00:07:28,420 --> 00:07:31,430
beamlet five at an intensity of 2.5,

131
00:07:31,430 --> 00:07:35,270
and beamlet six at an intensity of 0.

132
00:07:35,270 --> 00:07:38,010
This makes sense, because beamlet two goes

133
00:07:38,010 --> 00:07:41,620
across the spinal cord, and beamlet six only

134
00:07:41,620 --> 00:07:44,940
goes down healthy-tissue voxels.

135
00:07:44,940 --> 00:07:46,840
And if we look at our constraints,

136
00:07:46,840 --> 00:07:51,340
we can double-check that each tumor voxel is receiving a dose

137
00:07:51,340 --> 00:07:55,400
of at least 7 -- one tumor voxel gets a dose of 8 --

138
00:07:55,400 --> 00:07:58,340
and the spinal cord is receiving a dose of 5,

139
00:07:58,340 --> 00:08:01,700
which is the maximum possible dose.

140
00:08:01,700 --> 00:08:05,660
In the next video, we'll see an example of a real problem,

141
00:08:05,660 --> 00:08:10,070
and how big the problem is on an actual tumor case.

